package home_work_1;

public class Task2 {

    public static void main(String[] args) {
        int a = 8;
        int b = 2;
        int c;
        boolean result;

        c = (5 + b / a); // 2 / 8 = 0 так как при делении в переменную типа int записывается целая часть от числа полученного при делении, 0 + 5 = 5
        System.out.println(c);

        c = (5 + b) / a; // 5 + 2 = 7, 7 / 8 = 0 так как при делении в переменную типа int записывается целая часть от числа полученного при делении
        System.out.println(c);

        c = (5 + b++) / a; // 5 + 2++ =7 так как постинкремент в данном случае выполниться после сложения,
        // 7 / 8 = 0 так как при делении в переменную типа int записывается целая часть от числа полученного при делении
        System.out.println(c);
        b = 2;

        c = (5 + b++) / --a; // 5 + 2++ = 7 далее 2++ становится 3, 7 / --8 = 1, в данном случае сначала выполняется
        // действие с преинкрементом --8 = 7  7 / 7 = 1
        System.out.println(c);
        a =8;
        b = 2;

        c = (5 * b >> b++) / --a; // сначала выполняется сдвиг вправо на 2 числа 2 = 0, 5 * 0  = 0, 0 / --8 = 0 в данном случае сначала выполняется
        // действие с преинкрементом --8 = 7 и затем выполняется деление 0 / 7 = 0
        System.out.println(c);
        a = 8;
        b = 2;

        c = (5 + 7 > 20 ? 68 : 22 * b >> b++) / --a; // 5 + 7 > 20 нет, значит выполняем 22 * 2 >> 2++ здесь сначала выполняем сдвиг вправо 2 на 2
        // так как постинкремент выполниться после сдвига и получаем 0, 22 * 0 = 0 далее 0 / --8 выполняем преинкремент получаем 0 / 7 = 0
        System.out.println(c);

        //(5 + 7 > 20 ? 68 >= 68 : 22 * b>> b++) / --a; в этом выражении ошибка компиляции, обе ветви тернарного оператора должны возвращать значения одного типа

        result = 6 - 2 > 3 && 12 * 12 <= 119; // левая часть дает true, а правая false, значит результат будет false
        // так как при логическом операторе && оба условия должны быть true чтобы результат был true
        System.out.println(result);

        result = true && false; // false так как при логическом операторе && оба условия должны быть true чтобы результат был true
        System.out.println(result);
    }
}
